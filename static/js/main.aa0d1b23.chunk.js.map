{"version":3,"sources":["foodforest_icon.PNG","Filter.js","Searchbar.js","Navbar.js","PlantInfo.js","PersonMarker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Filter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","filterEdibleFruit","filterEdibleSeed","filterSummer","filterWinter","filterFall","filterSpring","handleSwitch2","bind","assertThisInitialized","handleSwitch3","handleSwitch4","handleSwitch5","handleSwitch6","handleSwitch7","setState","refilter","oneFilter","entry","columnName","add","season","filtered","Set","toConsumableArray","filter","x","has","_this2","fruit","seed","info","keys","map","key","allSeasons","console","log","filterColumn","intersection","updateFilters","_this3","react_default","a","createElement","className","reactjs_popup_es","trigger","style","color","modal-filter","close","onClick","Container","class","Row","Col","react_switch_default","onChange","checked","Component","Searchbar","InputGroup","Input","size","placeholder","Example","toggle","isOpen","es_Navbar","light","expand","backgroundColor","NavbarBrand","href","Image_default","src","logo","alt","width","NavbarToggler","Collapse","navbar","Nav","NavItem","src_Filter_0","NavLink","src_Searchbar","React","PlantInfo","modal","prevState","fontSize","position","right","plant","Modal","scrollable","ModalHeader","ModalBody","plantInfoProp","ModalFooter","Button","PersonMarker","App","plantInfo","center","lat","lng","zoom","Tabletop","init","callback","junk","tabletop","isGeolocationAvailable","isGeolocationEnabled","coords","latitude","longitude","sheets","all","point","length","items","plantColor","Navbar_Example","id","height","lib_default","boostrapURLKeys","defaultCenter","defaultZoom","options","maps","mapTypeId","minZoom","maxZoom","restriction","latLngBounds","east","north","south","west","strictBounds","index","undefined","src_PlantInfo","src_PersonMarker","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa0d1b23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/foodforest_icon.3687f470.PNG\";","import React, { Component } from 'react'\nimport './Filter.css'\nimport Popup from \"reactjs-popup\"\nimport Switch from \"react-switch\"\nimport { Container, Row, Col } from 'reactstrap';\n// import Container from 'react-bootstrap/Container'\n// import Tabletop from 'tabletop'\n\nclass Filter extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      filterEdibleFruit: false,\n      filterEdibleSeed: false,\n      filterSummer: true,\n      filterWinter: true,\n      filterFall: true,\n      filterSpring: true\n    }\n    this.handleSwitch2 = this.handleSwitch2.bind(this)\n    this.handleSwitch3 = this.handleSwitch3.bind(this)\n    this.handleSwitch4 = this.handleSwitch4.bind(this)\n    this.handleSwitch5 = this.handleSwitch5.bind(this)\n    this.handleSwitch6 = this.handleSwitch6.bind(this)\n    this.handleSwitch7 = this.handleSwitch7.bind(this)\n  }\n\n  handleSwitch2(filterEdibleFruit) {\n    this.setState({filterEdibleFruit: filterEdibleFruit}, this.refilter)\n  }\n  handleSwitch3(filterEdibleSeed) {\n    this.setState({filterEdibleSeed: filterEdibleSeed}, this.refilter)\n  }\n  handleSwitch4(filterSpring) {\n    this.setState({filterSpring: filterSpring}, this.refilter)\n  }\n  handleSwitch5(filterSummer){\n    this.setState({filterSummer: filterSummer}, this.refilter)\n  }\n  handleSwitch6(filterFall) {\n    this.setState({filterFall: filterFall}, this.refilter)\n  }\n  handleSwitch7(filterWinter) {\n    this.setState({filterWinter: filterWinter}, this.refilter)\n  }\n  \n  filterColumn(oneFilter, entry, columnName){\n    if(entry[columnName] === 'FALSE'){\n      oneFilter.add(entry['Label'])\n    }\n  }\n  filterSeason(oneFilter, entry, season){\n    if(season !== entry['Harvest-able Season']){\n      oneFilter.add(entry['Label'])\n    }\n  }\n  intersection(filtered, oneFilter){\n    return new Set([...filtered].filter(x => oneFilter.has(x)))\n  }\n\n  refilter() {\n    var filtered = new Set()\n    var fruit = new Set()\n    var seed = new Set()\n    // TODO remove comments after Harvest-able season has been added to spreadsheet\n    // var spring = new Set()\n    // var summer = new Set()\n    // var fall = new Set()\n    // var winter = new Set()\n    var info = this.props.info\n    \n    Object.keys(info).map((key) => {\n      //at least one filter is true or switch is on\n      var filter = this.state.filterEdibleFruit || this.state.filterEdibleSeed\n      var allSeasons = this.state.filterSpring && this.state.filterSummer && this.state.filterFall && this.state.filterWinter\n      console.log(!allSeasons || filter)\n      if (!allSeasons || filter){\n        filtered.add(info[key]['Label'])\n        if(filter){\n          if(this.state.filterEdibleFruit){\n            this.filterColumn(fruit, info[key], 'Edible (fruit) Y/N')\n          }\n          if(this.state.filterEdibleSeed){\n            this.filterColumn(seed, info[key], 'Edible Seed')\n          }\n          // TODO remove comments after Harvest-able season has been added to spreadsheet\n          // if(this.state.filterSpring){\n          //   this.filterColumn(spring, info[key])\n          // }\n          // if(this.state.filterSummer){\n          //   this.filterColumn(summer, info[key])\n          // }\n          // if(this.state.filterFall){\n          //   this.filterColumn(fall, info[key])\n          // }\n          // if(this.state.filterWinter){\n          //   this.filterColumn(winter, info[key])\n          // }\n\n          //intersection of all sets that are on\n          if(this.state.filterEdibleFruit){\n            filtered = this.intersection(filtered, fruit)\n          }\n          if(this.state.filterEdibleSeed){\n            filtered = this.intersection(filtered, seed)\n          }\n          // TODO remove comments after Harvest-able season has been added to spreadsheet\n          // if(this.state.filterSpring){\n          //   filtered = this.intersection(filtered, spring)\n          // }\n          // if(this.state.filterSummer){\n          //   filtered = this.intersection(filtered, summer)\n          // }\n          // if(this.state.filterFall){\n          //   filtered = this.intersection(filtered, fall)\n          // }\n          // if(this.state.filterWinter){\n          //   filtered = this.intersection(filtered, winter)\n          // }\n        }\n      }\n    })\n\n    this.props.updateFilters(filtered)\n  }\n\n\n  /* Loads plant information and coordinates from a google spreadsheet.\n   * info is stored as a map of name to information\n   * plantCoords is stored as a list of {name, x, y} objects\n   */\n\n\n\n  render() {\n    return (\n      <div className=\"Filter\">\n        <header className=\"Filter-header\">\n          <Popup trigger={<button className=\"btn default\" style={{color: 'white'}}> Filter </button>} modal-filter>\n            {close => (\n              <div className=\"modal-filter\">\n                <a className=\"close\" onClick={close}>\n                  &times;\n                </a>\n                <div className=\"header\"> Filters </div>\n                <div className=\"grid-container\">\n                <Container>\n                <div class = \"Filter-header-header\">Edibility</div>\n                  <Row className=\"justify-content-md-center\">\n                    <Col><div className=\"item1\">Fruit</div></Col>\n                    <Col>\n                      <div className=\"item4\"><Switch onChange={this.handleSwitch2} checked={this.state.filterEdibleFruit} /></div>\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-md-center\">\n                    <Col><div className=\"item1\">Seed</div></Col>\n                    <Col>\n                      <div className=\"item4\"><Switch onChange={this.handleSwitch3} checked={this.state.filterEdibleSeed} /></div>\n                    </Col>\n                  </Row>\n                  <div className = \"season-filters\">\n                    <div className = \"Filter-header-header\">Harvest Season</div>\n                    <Row className=\"justify-content-md-center\">\n                      <Col>Spring</Col>\n                      <Col>\n                        <div className=\"item4\"><Switch onChange={this.handleSwitch4} checked={this.state.filterSpring} /></div>\n                      </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                      <Col>Summer</Col>\n                      <Col>\n                        <div className=\"item4\"><Switch onChange={this.handleSwitch5} checked={this.state.filterSummer} /></div>\n                      </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                      <Col>Fall</Col>\n                      <Col>\n                        <div className=\"item4\"><Switch onChange={this.handleSwitch6} checked={this.state.filterFall} /></div>\n                      </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                      <Col>Winter</Col>\n                      <Col>\n                        <div className=\"item4\"><Switch onChange={this.handleSwitch7} checked={this.state.filterWinter} /></div>\n                      </Col>\n                    </Row>\n                  </div>\n                </Container>\n                </div>\n              </div>\n            )}\n          </Popup>\n        </header>\n      </div>\n    )\n\n  }\n}\n\nexport default Filter\n","import React, { Component } from 'react';\nimport { InputGroup, Input } from 'reactstrap';\n\n\nclass Searchbar extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n      return (\n          <InputGroup>\n            <Input style={{color:'gray', size: 'small'}} placeholder=\"Search\" />\n          </InputGroup>\n      );\n    };\n}\n\nexport default Searchbar\n","import React from 'react';\nimport Filter from './Filter.js';\nimport Searchbar from './Searchbar.js';\nimport Image from 'react-bootstrap/Image';\nimport logo from './foodforest_icon.PNG';\nimport './Navbar.css';\n\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <div>\n          <Navbar color=\"faded\" light expand=\"sm\" style={{backgroundColor: '#4B453F'}}>\n          <NavbarBrand href=\"/\">\n            <Image src= {logo} alt=\"Logo\" style={{width:200}} />\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <Nav className= \"Navbar-content\" navbar>\n                <NavItem>\n                  <Filter info={this.props.info} updateFilters={this.props.updateFilters} style={{color: 'white'}} />\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"https://festivalbeach.org/\" style={{color: 'white'}} >Festival Beach Website</NavLink>\n                </NavItem>\n                <NavItem>\n                  <Searchbar/>\n                </NavItem>\n              </Nav>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass PlantInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n   render() {\n    return (\n      <div>\n        <div className=\"icon\" ><i className=\"material-icons\" style={{color:this.props.color}}onClick={this.toggle}>local_florist</i></div>\n        <icon>\n          <div style={{color: 'white', fontSize: '.8em', position: 'relative', right: '2px'}}>{this.props.plant}</div>\n        </icon>\n        <Modal scrollable isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>{this.props.plant}</ModalHeader>\n          <ModalBody>\n              Name: {this.props.plantInfoProp['Label']} <br />\n              Genus: {this.props.plantInfoProp['Genus']} <br />\n              Family: {this.props.plantInfoProp['Family']} <br />\n              Cousin: {this.props.plantInfoProp['Cousin']} <br />\n              Species: {this.props.plantInfoProp['Species']} <br />\n              Strata: {this.props.plantInfoProp['Species']} <br />\n              Fruit Type: {this.props.plantInfoProp['Fruit Type']} <br />\n              Fruit Edibility: {this.props.plantInfoProp['Edible (fruit) Y/N']} <br />\n              Bloom Color: {this.props.plantInfoProp['Bloom Color']} <br />\n              Flower Edibility: {this.props.plantInfoProp['Edible Flower  Y/N']} <br />\n              Leaf Edibility: {this.props.plantInfoProp['Edible Leaf']} <br />\n              Bark Edibility: {this.props.plantInfoProp['Edible Bark Y/N']} <br />\n              Seed Edibility: {this.props.plantInfoProp['Edible Seed']} <br />\n              Overall Toxicity Rating (1-4): {this.props.plantInfoProp['Toxicity (Rating: 1-4)']} <br />\n              Water Use: {this.props.plantInfoProp['Water Use']} <br />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default PlantInfo;\n","import React from 'react';\n\nclass PersonMarker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n   render() {\n    return (\n      <div>\n        <div className=\"icon\" ><i className=\"material-icons\" style={{color: '#EE2737'}}>accessibility</i></div>\n        <icon >\n          <div style={{color: 'white', size: '5em', position: 'relative'}}>YOU ARE HERE</div>\n        </icon>\n      </div>\n    );\n  }\n}\n\nexport default PersonMarker;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar.js'\nimport PlantInfo from './PlantInfo.js'\nimport PersonMarker from './PersonMarker.js'\nimport Tabletop from 'tabletop';\nimport GoogleMapReact from 'google-map-react';\nimport { geolocated } from 'react-geolocated';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      plantInfo: [],\n      filtered: new Set(),\n      center: {\n        lat: 30.2535,\n        lng: -97.7350\n      },\n      zoom: 20\n    }\n  }\n\n  /* Loads plant information and coordinates from a google spreadsheet.\n   * plantInfo is stored as a map of name to information\n   * plantCoords is stored as a list of {name, x, y} objects\n   */\n  componentDidMount() {\n    Tabletop.init({\n      key: '1_sQkoLJtMppKImYY5A7G06NqK1DrAZ9hGd596GKImFk',\n      callback: (junk, tabletop) => {\n        if (this.props.isGeolocationAvailable && this.props.isGeolocationEnabled && this.props.coords) {\n          var lat = this.props.coords.latitude;\n          var lng = this.props.coords.longitude;\n          if (lat >= 30.2525 && lat <= 30.2535 && lng >= -97.736 && lng <= -97.734) {\n            this.setState({center: {lat: lat, lng: lng}, zoom: 20});\n          }\n        }\n        this.setState({plantInfo: tabletop.sheets('Plant_Information').all().filter(point => point['Label'].length > 0)});\n      }\n    });\n  }\n\n  updateFilters(items) {\n    this.setState({filtered: items});\n  }\n\n  render() {\n    if (Object.keys(this.state.plantInfo).length === 0) {\n      return (<p>Loading...</p>);\n    }\n    else {\n      console.log(this.state.center.lat);\n      console.log(this.state.center.lng);\n      var plantInfo = this.state.plantInfo;\n      var plantColor = null;\n      return (\n        <div className=\"App\">\n          <Navbar info={this.state.plantInfo} updateFilters={this.updateFilters.bind(this)}/>\n          <header className=\"App-header\">\n            <div id=\"map\" style={{width: '100%', height: '100vh'}}>\n              <GoogleMapReact\n                boostrapURLKeys={{key: 'AIzaSyBgw60HMTK35v3C-sRyLliDj6tNV-m2zlI'}}\n                defaultCenter={this.state.center}\n                defaultZoom={this.state.zoom}\n                options={function (maps) { return { mapTypeId: \"satellite\", minZoom: 19, maxZoom: 20, restriction: {\n                  latLngBounds: {\n                    east: -97.734,\n                    north: 30.2535,\n                    south: 30.2525,\n                    west: -97.736\n                  },\n                  strictBounds: true\n                }}}}>\n                {Object.keys(plantInfo).map((index) => {\n                  if (plantInfo[index]['Toxicity (Rating: 1-4)'] !== undefined){\n                    if (plantInfo[index]['Toxicity (Rating: 1-4)'] === \"1 - Safe to eat. Enjoy!\" ){\n                      plantColor = \"#93C054\";\n                    }\n                    else if (plantInfo[index]['Toxicity (Rating: 1-4)'] === \"2 - May need some processing.\"){\n                      plantColor = \"#F68D2E\";\n                    }\n                    else {\n                      plantColor = \"#EE2737\";\n                    }\n                  }\n                  if (!this.state.filtered.has(plantInfo[index]['Label']) && plantInfo[index]['Latitude'] !== undefined && plantInfo[index]['Longitude'] !== undefined) {\n                    return <PlantInfo\n                      plant={plantInfo[index]['Label']}\n                      lat={plantInfo[index]['Latitude']}\n                      lng={plantInfo[index]['Longitude']}\n                      color={plantColor}\n                      plantInfoProp={plantInfo[index]}\n                    />\n                  }\n                })}\n                {this.props.coords !== null &&\n                  <PersonMarker\n                    lat={this.props.coords.latitude}\n                    lng={this.props.coords.longitude}\n                  />\n                }\n              </GoogleMapReact>\n            </div>\n          </header>\n        </div>\n      );\n    }\n  }\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}